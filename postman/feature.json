{
	"info": {
		"_postman_id": "032bcfca-53ae-4cfb-a76e-a7937004ba1a",
		"name": "feature",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "31794887"
	},
	"item": [
		{
			"name": "Добавление пользователя",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"user\",\r\n    \"email\": \"user@inbox.com\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://localhost:8080/admin/users"
			},
			"response": []
		},
		{
			"name": "Добавление второго пользователя",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"user_2\",\r\n    \"email\": \"user_2@inbox.com\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://localhost:8080/admin/users"
			},
			"response": []
		},
		{
			"name": "Добавление третьего пользователя",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"user_3\",\r\n    \"email\": \"user_3@inbox.com\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://localhost:8080/admin/users"
			},
			"response": []
		},
		{
			"name": "Добавление категории \"Путешествия\"",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Путешествия\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://localhost:8080/admin/categories"
			},
			"response": []
		},
		{
			"name": "Добавление события 1",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"annotation\": \"Сплав на байдарках похож на полет.\",\r\n  \"category\": 1,\r\n  \"description\": \"Сплав на байдарках похож на полет. На спокойной воде — это парение. На бурной, порожистой — выполнение фигур высшего пилотажа. И то, и другое дарят чувство обновления, феерические эмоции, яркие впечатления.\",\r\n  \"eventDate\": \"2024-12-15 11:10:05\",\r\n  \"location\": {\r\n    \"lat\": 55.754167,\r\n    \"lon\": 37.62\r\n  },\r\n  \"paid\": true,\r\n  \"participantLimit\": 10,\r\n  \"requestModeration\": false,\r\n  \"title\": \"Сплав на байдарках\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://localhost:8080/users/1/events"
			},
			"response": []
		},
		{
			"name": "Ошибка 409. Добавление комментария к неопубликованному событию",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 409\", function () {\r",
							"    pm.expect(pm.response.code).equal(409);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"author\" : 2,\r\n    \"body\": \"Вот такой вот комментарий\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://localhost:8080/comments/events/1"
			},
			"response": []
		},
		{
			"name": "Админ публикует событие 1",
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"stateAction\": \"PUBLISH_EVENT\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://localhost:8080/admin/events/1"
			},
			"response": []
		},
		{
			"name": "Информация о событии до создания комментария",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Has property \"commentsCount\"', function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('commentsCount');\r",
							"    \r",
							"});\r",
							"pm.test('Property \"commentsCount\" equal 0', function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.commentsCount, '\"commentsCount\" must be 0').to.eql(0);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": "http://localhost:8080/events/1"
			},
			"response": []
		},
		{
			"name": "Ошибка 400.  Отсутствует author.  Пользователь 2 добавляет комментария к событию",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.expect(pm.response.code).equal(400);\r",
							"});\r",
							"pm.test(\"Has comment get response\", function () {\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"body\": \"Вот такой вот комментарий\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://localhost:8080/comments/events/1"
			},
			"response": []
		},
		{
			"name": "Ошибка 400.  Отсутствует body. Пользователь 2 добавляет комментария к событию",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.expect(pm.response.code).equal(400);\r",
							"});\r",
							"pm.test(\"Has comment get response\", function () {\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"author\" : 2\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://localhost:8080/comments/events/1"
			},
			"response": []
		},
		{
			"name": "Ошибка 400.  body пустое. Пользователь 2 добавляет комментария к событию",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.expect(pm.response.code).equal(400);\r",
							"});\r",
							"pm.test(\"Has comment get response\", function () {\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"author\" : 2,\r\n    \"body\": null\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://localhost:8080/comments/events/1"
			},
			"response": []
		},
		{
			"name": "Ошибка 400.  Длинна body больше 300 символов. Пользователь 2 добавляет комментария к событию",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.expect(pm.response.code).equal(400);\r",
							"});\r",
							"pm.test(\"Has comment get response\", function () {\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"author\" : 2,\r\n    \"body\": \"Очень очень очень очень очень очень очень очень очень очень очень очень очень очень очень очень очень очень очень очень очень очень очень очень очень очень очень очень очень очень очень очень очень очень очень очень очень очень очень очень очень очень очень очень очень очень очень очень очень очень очень очень очень очень очень очень очень очень очень очень очень очень очень очень очень очень очень очень очень очень очень очень очень очень очень очень очень очень очень очень очень длинный комментарий\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://localhost:8080/comments/events/1"
			},
			"response": []
		},
		{
			"name": "Пользователь 2 добавляет комментария к событию",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.expect(pm.response.code).equal(201);\r",
							"});\r",
							"pm.test(\"Has comment get response\", function () {\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"author\" : 2,\r\n    \"body\": \"Вот такой вот комментарий\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://localhost:8080/comments/events/1"
			},
			"response": []
		},
		{
			"name": "Ошибка 409. Пользователь 2 добавляет еще один комментария к событию",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 409\", function () {\r",
							"    pm.expect(pm.response.code).equal(409);\r",
							"});\r",
							"pm.test(\"Has comment get response\", function () {\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"author\" : 2,\r\n    \"body\": \"Еще один комментарий\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://localhost:8080/comments/events/1"
			},
			"response": []
		},
		{
			"name": "Ошибка 404. Добавление комментария к несуществующему событию",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.expect(pm.response.code).equal(404);\r",
							"});\r",
							"pm.test(\"Has comment get response\", function () {\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"author\" : 2,\r\n    \"body\": \"Вот такой вот комментарий\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://localhost:8080/comments/events/1596547"
			},
			"response": []
		},
		{
			"name": "Ошибка 404. Добавление комментария несуществующему пользователем",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.expect(pm.response.code).equal(404);\r",
							"});\r",
							"pm.test(\"Has comment get response\", function () {\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"author\" : 1596547,\r\n    \"body\": \"Вот такой вот комментарий\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://localhost:8080/comments/events/1"
			},
			"response": []
		},
		{
			"name": "Информация о событии после создания комментария",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Has property \"commentsCount\"', function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('commentsCount');\r",
							"    \r",
							"});\r",
							"pm.test('Property \"commentsCount\" equal 1', function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.commentsCount, '\"commentsCount\" must be 1').to.eql(1);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": "http://localhost:8080/events/1"
			},
			"response": []
		},
		{
			"name": "Получение комментария по индентификатору",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).equal(200);\r",
							"});\r",
							"pm.test(\"Has comment get response\", function () {\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": "http://localhost:8080/comments/1"
			},
			"response": []
		},
		{
			"name": "Ошибка 404. Получение комментария по несуществующему идентификатору",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.expect(pm.response.code).equal(404);\r",
							"});\r",
							"pm.test(\"Has comment get response\", function () {\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": "http://localhost:8080/comments/1000"
			},
			"response": []
		},
		{
			"name": "Пользователь 3 добавляет комментария к событию",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.expect(pm.response.code).equal(201);\r",
							"});\r",
							"pm.test(\"Has comment get response\", function () {\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"author\" : 3,\r\n    \"body\": \"Обязательно пойду и вам советую\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://localhost:8080/comments/events/1"
			},
			"response": []
		},
		{
			"name": "Получение комментариев по событию",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).equal(200);\r",
							"});\r",
							"pm.test(\"Has comment get response\", function () {\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/comments/events/1?from=0&size=100",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"comments",
						"events",
						"1"
					],
					"query": [
						{
							"key": "from",
							"value": "0"
						},
						{
							"key": "size",
							"value": "100"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Проверка пагинации. Получение комментариев по событию",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).equal(200);\r",
							"});\r",
							"pm.test(\"Has comment get response\", function () {\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"pm.test(\"Test get comments with paggination\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.length, 'comments count in total').to.eql(1);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/comments/events/1?from=0&size=1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"comments",
						"events",
						"1"
					],
					"query": [
						{
							"key": "from",
							"value": "0"
						},
						{
							"key": "size",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Ошибка 404. Получение комментариев по несуществующему событию",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.expect(pm.response.code).equal(404);\r",
							"});\r",
							"pm.test(\"Has comment get response\", function () {\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/comments/events/1596547?from=0&size=100",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"comments",
						"events",
						"1596547"
					],
					"query": [
						{
							"key": "from",
							"value": "0"
						},
						{
							"key": "size",
							"value": "100"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Ошибка 400. Отсутствует from. Получение комментариев по событию.",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.expect(pm.response.code).equal(400);\r",
							"});\r",
							"pm.test(\"Has comment get response\", function () {\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/comments/events/1?size=100",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"comments",
						"events",
						"1"
					],
					"query": [
						{
							"key": "size",
							"value": "100"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Ошибка 400. from < 0. Получение комментариев по событию.",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.expect(pm.response.code).equal(400);\r",
							"});\r",
							"pm.test(\"Has comment get response\", function () {\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/comments/events/1?size=100&from=-1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"comments",
						"events",
						"1"
					],
					"query": [
						{
							"key": "size",
							"value": "100"
						},
						{
							"key": "from",
							"value": "-1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Ошибка 400. size < 0. Получение комментариев по событию.",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.expect(pm.response.code).equal(400);\r",
							"});\r",
							"pm.test(\"Has comment get response\", function () {\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/comments/events/1?size=-1&from=0",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"comments",
						"events",
						"1"
					],
					"query": [
						{
							"key": "size",
							"value": "-1"
						},
						{
							"key": "from",
							"value": "0"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Ошибка 400. Отсутствует size. Получение комментариев по событию.",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.expect(pm.response.code).equal(400);\r",
							"});\r",
							"pm.test(\"Has comment get response\", function () {\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/comments/events/1?from=0",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"comments",
						"events",
						"1"
					],
					"query": [
						{
							"key": "from",
							"value": "0"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Ошибка 404. Лайк от несуществующего пользователя",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.expect(pm.response.code).equal(404);\r",
							"});\r",
							"pm.test(\"Has comment get response\", function () {\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": "http://localhost:8080/comments/3/users/1596547/like"
			},
			"response": []
		},
		{
			"name": "Ошибка 404. Лайк несуществующего комментария",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.expect(pm.response.code).equal(404);\r",
							"});\r",
							"pm.test(\"Has comment get response\", function () {\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": "http://localhost:8080/comments/100/users/1/like"
			},
			"response": []
		},
		{
			"name": "Ошибка 404. Дизлайк от несуществующего пользователя",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.expect(pm.response.code).equal(404);\r",
							"});\r",
							"pm.test(\"Has comment get response\", function () {\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": "http://localhost:8080/comments/3/users/1596547/dislike"
			},
			"response": []
		},
		{
			"name": "Ошибка 404. Дизлайк несуществующего комментария",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.expect(pm.response.code).equal(404);\r",
							"});\r",
							"pm.test(\"Has comment get response\", function () {\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": "http://localhost:8080/comments/100/users/1/dislike"
			},
			"response": []
		},
		{
			"name": "Пользователь 1 ставит лайк комментарию 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).equal(200);\r",
							"});\r",
							"pm.test(\"Has comment get response\", function () {\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": "http://localhost:8080/comments/3/users/1/like"
			},
			"response": []
		},
		{
			"name": "Пользователь 2 ставит дизлайк комментарию 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).equal(200);\r",
							"});\r",
							"pm.test(\"Has comment get response\", function () {\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": "http://localhost:8080/comments/3/users/2/dislike"
			},
			"response": []
		},
		{
			"name": "Пользователь 1 ставит еще один лайк комментарию 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).equal(200);\r",
							"});\r",
							"pm.test(\"Has comment get response\", function () {\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": "http://localhost:8080/comments/3/users/1/like"
			},
			"response": []
		},
		{
			"name": "Засчитывается только одна реакция от человека. Количество лайков 1, дизлайков 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).equal(200);\r",
							"});\r",
							"pm.test(\"Has comment get response\", function () {\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"pm.test('Has property \"reactions\"', function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('reactions');\r",
							"});\r",
							"pm.test('Has property \"likeCount\" and equal 1', function () {\r",
							"    var jsonData = pm.response.json().reactions;\r",
							"    pm.expect(jsonData).to.have.property('likeCount');\r",
							"    pm.expect(jsonData.likeCount, '\"likeCount\" must be 1').to.eql(1);\r",
							"});\r",
							"pm.test('Has property \"dislikeCount\" and equal 1', function () {\r",
							"    var jsonData = pm.response.json().reactions;\r",
							"    pm.expect(jsonData).to.have.property('dislikeCount');\r",
							"    pm.expect(jsonData.dislikeCount, '\"dislikeCount\" must be 1').to.eql(1);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": "http://localhost:8080/comments/3"
			},
			"response": []
		},
		{
			"name": "Пользователь 1 ставит дислайк комментарию 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).equal(200);\r",
							"});\r",
							"pm.test(\"Has comment get response\", function () {\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": "http://localhost:8080/comments/3/users/1/dislike"
			},
			"response": []
		},
		{
			"name": "Засчитывается только одна реакция от человека. Количество лайков 0, дизлайков 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).equal(200);\r",
							"});\r",
							"pm.test(\"Has comment get response\", function () {\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"pm.test('Has property \"reactions\"', function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('reactions');\r",
							"});\r",
							"pm.test('Has property \"likeCount\" and equal 0', function () {\r",
							"    var jsonData = pm.response.json().reactions;\r",
							"    pm.expect(jsonData).to.have.property('likeCount');\r",
							"    pm.expect(jsonData.likeCount, '\"likeCount\" must be 0').to.eql(0);\r",
							"});\r",
							"pm.test('Has property \"dislikeCount\" and equal 1', function () {\r",
							"    var jsonData = pm.response.json().reactions;\r",
							"    pm.expect(jsonData).to.have.property('dislikeCount');\r",
							"    pm.expect(jsonData.dislikeCount, '\"dislikeCount\" must be 2').to.eql(2);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": "http://localhost:8080/comments/3"
			},
			"response": []
		},
		{
			"name": "Пользователь 1 отменяет реакцию на комментарий 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.expect(pm.response.code).equal(204);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": "http://localhost:8080/comments/3/users/1/deleteReaction"
			},
			"response": []
		},
		{
			"name": "Пользователь 2 отменяет реакцию на комментарий 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.expect(pm.response.code).equal(204);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": "http://localhost:8080/comments/3/users/2/deleteReaction"
			},
			"response": []
		},
		{
			"name": "Комментарий с идентификатором 3. Количество лайков 0, дизлайков 0",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).equal(200);\r",
							"});\r",
							"pm.test(\"Has comment get response\", function () {\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"pm.test('Has property \"reactions\"', function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('reactions');\r",
							"});\r",
							"pm.test('Has property \"likeCount\" and equal 0', function () {\r",
							"    var jsonData = pm.response.json().reactions;\r",
							"    pm.expect(jsonData).to.have.property('likeCount');\r",
							"    pm.expect(jsonData.likeCount, '\"likeCount\" must be 0').to.eql(0);\r",
							"});\r",
							"pm.test('Has property \"dislikeCount\" and equal 0', function () {\r",
							"    var jsonData = pm.response.json().reactions;\r",
							"    pm.expect(jsonData).to.have.property('dislikeCount');\r",
							"    pm.expect(jsonData.dislikeCount, '\"dislikeCount\" must be 0').to.eql(0);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": "http://localhost:8080/comments/3"
			},
			"response": []
		},
		{
			"name": "Комментарии пользователя 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).equal(200);\r",
							"});\r",
							"pm.test(\"Has comment get response\", function () {\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"pm.test(\"Has comment get response length equals 1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.length, 'List length must be 1').to.eql(1);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/comments/users/3?from=0&size=100",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"comments",
						"users",
						"3"
					],
					"query": [
						{
							"key": "from",
							"value": "0"
						},
						{
							"key": "size",
							"value": "100"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Ошибка 400. Отсутствует from. Комментарии пользователя 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.expect(pm.response.code).equal(400);\r",
							"});\r",
							"pm.test(\"Has comment get response\", function () {\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/comments/users/3?size=100",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"comments",
						"users",
						"3"
					],
					"query": [
						{
							"key": "size",
							"value": "100"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Ошибка 400. from < 0. Комментарии пользователя 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.expect(pm.response.code).equal(400);\r",
							"});\r",
							"pm.test(\"Has comment get response\", function () {\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/comments/users/3?from=-1&size=100",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"comments",
						"users",
						"3"
					],
					"query": [
						{
							"key": "from",
							"value": "-1"
						},
						{
							"key": "size",
							"value": "100"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Ошибка 400. Отсутствует size. Комментарии пользователя 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.expect(pm.response.code).equal(400);\r",
							"});\r",
							"pm.test(\"Has comment get response\", function () {\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/comments/users/3?from=0",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"comments",
						"users",
						"3"
					],
					"query": [
						{
							"key": "from",
							"value": "0"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Ошибка 400. size < 0. Комментарии пользователя 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.expect(pm.response.code).equal(400);\r",
							"});\r",
							"pm.test(\"Has comment get response\", function () {\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/comments/users/3?from=0&size=-1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"comments",
						"users",
						"3"
					],
					"query": [
						{
							"key": "from",
							"value": "0"
						},
						{
							"key": "size",
							"value": "-1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Удаление чужого комментария",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 409\", function () {\r",
							"    pm.expect(pm.response.code).equal(409);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": "http://localhost:8080/comments/3/users/1"
			},
			"response": []
		},
		{
			"name": "Удаление своего комментария",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.expect(pm.response.code).equal(204);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": "http://localhost:8080/comments/3/users/3"
			},
			"response": []
		},
		{
			"name": "Удаление комментария неизвестным пользователем",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.expect(pm.response.code).equal(404);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": "http://localhost:8080/comments/3/users/100"
			},
			"response": []
		},
		{
			"name": "Удаление неизвестного комментария",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.expect(pm.response.code).equal(404);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": "http://localhost:8080/comments/100/users/3"
			},
			"response": []
		},
		{
			"name": "Комментарии пользователя 3 после удаления",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).equal(200);\r",
							"});\r",
							"pm.test(\"Has comment get response\", function () {\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"pm.test(\"Has comment get response length equals 0\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.length, 'List length must be 0').to.eql(0);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/comments/users/3?from=0&size=100",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"comments",
						"users",
						"3"
					],
					"query": [
						{
							"key": "from",
							"value": "0"
						},
						{
							"key": "size",
							"value": "100"
						}
					]
				}
			},
			"response": []
		}
	]
}